{"version":3,"sources":["../../src/cli/index.js"],"names":["resolve","mod","absolute","file","path","exit","lazy","code","process","on","cli","cliOptions","argv","slice","configOptions","opts","requiresWebpackConfig","webpackConfig","defaultOptions","options","require","forEach","include","map","webpackEnv","mode","mochaWebpack","f","addInclude","extensions","fallbackFileGlob","fileGlob","glob","files","addEntry","recursive","cwd","bail","reporter","reporterOptions","ui","interactive","clearTerminal","fgrep","grep","invert","checkLeaks","ignoreLeaks","fullTrace","fullStackTrace","quiet","useColors","colors","useInlineDiffs","inlineDiffs","timeout","retries","slow","asyncOnly","delay","growl","forbidOnly","then","watch","run","failures","catch","e","console","error","stack"],"mappings":"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","file":"index.js","sourcesContent":["import path from 'path';\nimport _ from 'lodash';\n\nimport parseArgv from './parseArgv';\nimport { existsFileSync } from '../util/exists';\nimport parseConfig from './parseConfig';\nimport requireWebpackConfig from './requireWebpackConfig';\nimport { ensureGlob, extensionsToGlob } from '../util/glob';\nimport createMochaWebpack from '../createMochaWebpack';\n\n\nfunction resolve(mod) {\n  const absolute = existsFileSync(mod) || existsFileSync(`${mod}.js`);\n  const file = absolute ? path.resolve(mod) : mod;\n  return file;\n}\n\nfunction exit(lazy, code) {\n  if (lazy) {\n    process.on('exit', () => {\n      process.exit(code);\n    });\n  } else {\n    process.exit(code);\n  }\n}\n\nasync function cli() {\n  const cliOptions = parseArgv(process.argv.slice(2), true);\n  const configOptions = parseConfig(cliOptions.opts);\n  const requiresWebpackConfig = cliOptions.webpackConfig != null || configOptions.webpackConfig != null;\n  const defaultOptions = parseArgv([]);\n\n  const options = _.defaults({}, cliOptions, configOptions, defaultOptions);\n\n  options.require.forEach((mod) => {\n    require(resolve(mod)); // eslint-disable-line global-require, import/no-dynamic-require\n  });\n\n  options.include = options.include.map(resolve);\n\n  options.webpackConfig = await requireWebpackConfig(\n    options.webpackConfig,\n    requiresWebpackConfig,\n    options.webpackEnv,\n    options.mode,\n  );\n\n  const mochaWebpack = createMochaWebpack();\n\n  options.include.forEach((f) => mochaWebpack.addInclude(f));\n\n  const extensions = _.get(options.webpackConfig, 'resolve.extensions', ['.js']);\n  const fallbackFileGlob = extensionsToGlob(extensions);\n  const fileGlob = options.glob != null ? options.glob : fallbackFileGlob;\n\n  options.files.forEach((f) => mochaWebpack.addEntry(ensureGlob(f, options.recursive, fileGlob)));\n\n  mochaWebpack.cwd(process.cwd());\n  mochaWebpack.webpackConfig(options.webpackConfig);\n  mochaWebpack.bail(options.bail);\n  mochaWebpack.reporter(options.reporter, options.reporterOptions);\n  mochaWebpack.ui(options.ui);\n  mochaWebpack.interactive(options.interactive);\n  mochaWebpack.clearTerminal(options.clearTerminal);\n\n  if (options.fgrep) {\n    mochaWebpack.fgrep(options.fgrep);\n  }\n\n  if (options.grep) {\n    mochaWebpack.grep(options.grep);\n  }\n\n  if (options.invert) {\n    mochaWebpack.invert();\n  }\n\n  if (options.checkLeaks) {\n    mochaWebpack.ignoreLeaks(false);\n  }\n\n  if (options.fullTrace) {\n    mochaWebpack.fullStackTrace();\n  }\n\n  if (options.quiet) {\n    mochaWebpack.quiet();\n  }\n\n  mochaWebpack.useColors(options.colors);\n  mochaWebpack.useInlineDiffs(options.inlineDiffs);\n  mochaWebpack.timeout(options.timeout);\n\n  if (options.retries) {\n    mochaWebpack.retries(options.retries);\n  }\n\n  mochaWebpack.slow(options.slow);\n\n  if (options.asyncOnly) {\n    mochaWebpack.asyncOnly();\n  }\n\n  if (options.delay) {\n    mochaWebpack.delay();\n  }\n\n  if (options.growl) {\n    mochaWebpack.growl();\n  }\n\n  if (options.forbidOnly) {\n    mochaWebpack.forbidOnly();\n  }\n\n  Promise\n    .resolve()\n    .then(() => {\n      if (options.watch) {\n        return mochaWebpack.watch();\n      }\n      return mochaWebpack.run();\n    })\n    .then((failures) => {\n      exit(options.exit, failures);\n    })\n    .catch((e) => {\n      if (e) {\n        console.error(e.stack); // eslint-disable-line\n      }\n      exit(options.exit, 1);\n    });\n}\n\ncli();\n"]}