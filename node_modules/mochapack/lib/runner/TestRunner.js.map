{"version":3,"sources":["../../src/runner/TestRunner.js"],"names":["entryPath","path","resolve","__dirname","entryLoaderPath","includeLoaderPath","noop","undefined","TestRunner","entries","includes","options","webpackConfig","stats","mocha","outputPath","output","buildStats","global","__webpackManifest__","affectedModules","affectedFiles","forEach","filePath","require","cache","files","dispose","createWebpackConfig","config","failures","compiler","hooks","run","tapAsync","c","cb","emit","reject","err","webpackStats","prepareMocha","fails","e","entryConfig","mochaRunner","compilationScheduler","uncaughtExceptionListener","runMocha","process","removeListener","on","nextTick","watchRun","abort","currentRunnable","runnable","retries","enableTimeouts","timeout","resetTimeout","watchCompiler","watchOptions","watch","getWatchOptions","pollingInterval","poll","watcher","chokidar","cwd","ignoreInitial","persistent","followSymlinks","ignorePermissionErrors","ignored","usePolling","interval","binaryInterval","restartWebpackBuild","aggregateTimeout","fileDeletedOrAdded","file","deleted","matchesGlob","some","pattern","join","removeFile","addFile","pause","absolute","EntryConfig","f","tmpPath","Date","now","toString","withCustomPath","normalize","publicPath","sep","plugins","interactive","push","userLoaders","unshift","test","use","loader","include","entry","module","rules","EventEmitter"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AAEA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;AACA;;;;AACA;;;;AACA;;;;;;AAJA;AAWA,IAAMA,YAAYC,eAAKC,OAAL,CAAaC,SAAb,EAAwB,aAAxB,CAAlB;;AACA,IAAMC,kBAAkBH,eAAKC,OAAL,CAAaC,SAAb,EAAwB,kCAAxB,CAAxB;AACA,IAAME,oBAAoBJ,eAAKC,OAAL,CAAaC,SAAb,EAAwB,yCAAxB,CAA1B;AACA,IAAMG,OAAO,SAAPA,IAAO;AAAA,SAAMC,SAAN;AAAA,CAAb;;IAgBqBC,U;;;AAKnB,sBAAYC,OAAZ,EAAoCC,QAApC,EAA6DC,OAA7D,EAA2F;AAAA;;AAAA;;AAEzF,UAAKF,OAAL,GAAeA,OAAf;AACA,UAAKC,QAAL,GAAgBA,QAAhB;;AAEA,UAAKC,OAAL,GAAeA,OAAf;AALyF;AAM1F;;;;iCAEYC,a,EAAuBC,K,EAAqB;AACvD,UAAMC,QAAe,8BAAe,KAAKH,OAApB,CAArB;AACA,UAAMI,aAAaH,cAAcI,MAAd,CAAqBf,IAAxC;AACA,UAAMgB,aAAyB,6BAAcJ,KAAd,EAAqBE,UAArB,CAA/B;;AAEAG,aAAOC,mBAAP,GAA6BF,WAAWG,eAAxC,CALuD,CAKE;;AAEzD;AACAH,iBAAWI,aAAX,CAAyBC,OAAzB,CAAiC,UAACC,QAAD,EAAc;AAC7C,eAAOC,QAAQC,KAAR,CAAcF,QAAd,CAAP;AACD,OAFD;AAGA;AACCT,WAAD,CAAaY,KAAb,GAAqBT,WAAWR,OAAhC;AACA,aAAOK,KAAP;AACD;;;;;;;AAyCG;AACAa;;;;;kCAtCE,Q,EACE,Q,EAQA,O;;;AAV4B,eAAM,KAAKC,mBAAL,EAAN;AAAA,2BAAXC,MAAW,QAA1BjB,aAA0B;;AAC9BkB,kBAAJ,GAAe,CAAf;AACMC,kBAAN,GAA2B,8BAAeF,MAAf,CAA3B;;AAEAE,mBAASC,KAAT,CAAeC,GAAf,CAAmBC,QAAnB,CAA4B,WAA5B,EAAyC,UAACC,CAAD,EAAIC,EAAJ,EAAW;AAClD,mBAAKC,IAAL,CAAU,eAAV;AACA;AACAD;AACD,WAJD;;AAMMT,iBAAN,GAAgB,wCAAyBI,QAAzB,CAAhB;AAVkC;AAyClC,2BAAOD,QAAP;AAzCkC;AAAA;AAAA,qDAWlC,IAAI;AACS,mBAAM,sBAAY,UAAC5B,OAAD,EAAUoC,MAAV,EAAqB;AAChD,mDAAsBP,QAAtB,EAAgC,UAACQ,GAAD,EAAyBC,YAAzB,EAAkD;AAChF,uBAAKH,IAAL,CAAU,eAAV,EAA2BE,GAA3B,EAAgCC,YAAhC;AACA,oBAAID,OAAO,CAACC,YAAZ,EAA0B;AACxBF;AACA;AACD;AACD,oBAAI;AACF,sBAAMxB,QAAQ,OAAK2B,YAAL,CAAkBZ,MAAlB,EAA0BW,YAA1B,CAAd;AACA,yBAAKH,IAAL,CAAU,aAAV;AACA,sBAAI;AACFvB,0BAAMmB,GAAN,CAAU,UAACS,KAAD,EAAW;AACnB,6BAAKL,IAAL,CAAU,gBAAV,EAA4BK,KAA5B;AACAxC,8BAAQwC,KAAR;AACD,qBAHD;AAID,mBALD,CAKE,OAAOC,CAAP,EAAU;AACV,2BAAKN,IAAL,CAAU,WAAV,EAAuBM,CAAvB;AACAzC,4BAAQ,CAAR;AACD;AACF,iBAZD,CAYE,OAAOyC,CAAP,EAAU;AACVL,yBAAOK,CAAP;AACD;AACF,eArBD;AAsBAZ,uBAASE,GAAT,CAAa3B,IAAb;AACD,aAxBgB,CAAN;AAAXwB,yBAAW,QAAX;AAAW;AAAA;AAyBZ,WA1BD;AAAA;AAAA;AAXkC;;;;;;;gDA+C9B,W,EACA,K,EACA,oB,EAEE,yB,EAMA,Q,EA8BA,Q,EAsCA,a,EAKA,Y,EACA,e,EAEA,O,EAaA,mB,EACA,kB;;;AAtGyC,eAAM,KAAKF,mBAAL,EAAN;AAAA,4BAAxBC,MAAwB,SAAvCjB,aAAuC,EAAhBgC,WAAgB,SAAhBA,WAAgB;;;AAE3CC,qBAAJ,GAAgC,IAAhC;AACIhC,eAAJ,GAAoB,IAApB;AACIiC,8BAAJ,GAAwC,IAAxC;;AAEMC,mCAAN,GAAkC,SAA5BA,yBAA4B,CAACR,GAAD,EAAS;AACzC;AACA;AACA,mBAAKF,IAAL,CAAU,mBAAV,EAA+BE,GAA/B;AACD,WAJD;;AAMMS,kBAAN,GAAiB,SAAXA,QAAW,GAAM;AACrB,gBAAI;AACF;AACA,kBAAMlC,QAAQ,OAAK2B,YAAL,CAAkBZ,MAAlB,EAA0BhB,KAA1B,CAAd;AACA;AACAoC,sBAAQC,cAAR,CAAuB,mBAAvB,EAA4CH,yBAA5C;;AAEA;AACA,qBAAKV,IAAL,CAAU,aAAV;AACAQ,4BAAc/B,MAAMmB,GAAN,CAAU,oBAAO,UAACH,QAAD,EAAc;AAC3C;AACAmB,wBAAQE,EAAR,CAAW,mBAAX,EAAgCJ,yBAAhC;;AAEA;AACAE,wBAAQG,QAAR,CAAiB,YAAM;AACrBP,gCAAc,IAAd;AACA,sBAAIC,wBAAwB,IAA5B,EAAkC;AAChC,2BAAKT,IAAL,CAAU,eAAV;AACAS;AACAA,2CAAuB,IAAvB;AACD,mBAJD,MAIO;AACL,2BAAKT,IAAL,CAAU,gBAAV,EAA4BP,QAA5B;AACD;AACF,iBATD;AAUD,eAfuB,CAAV,CAAd;AAgBD,aAxBD,CAwBE,OAAOS,GAAP,EAAY;AACZ,qBAAKF,IAAL,CAAU,WAAV,EAAuBE,GAAvB;AACD;AACF,WA5BD;;AA8BMR,kBAAN,GAAiB,8BAAeF,MAAf,CAAjB;AACA,kDAAyBE,QAAzB;AACA;AACAA,mBAASC,KAAT,CAAeqB,QAAf,CAAwBnB,QAAxB,CAAiC,WAAjC,EAA8C,UAACC,CAAD,EAAIC,EAAJ,EAAW;AACvD;AACA,gBAAIS,WAAJ,EAAiB;AACfC,qCAAuB,gCAAM;AAC3B,uBAAKT,IAAL,CAAU,eAAV;AACA;AACAD;AACD,eAJD;;AAMAS,0BAAYS,KAAZ;AACA;AACA,kBAAIT,YAAYU,eAAhB,EAAiC;AAC/B,oBAAMC,WAAWX,YAAYU,eAA7B;AACAC,yBAASC,OAAT,CAAiB,CAAjB;AACAD,yBAASE,cAAT,CAAwB,IAAxB;AACAF,yBAASG,OAAT,CAAiB,CAAjB;AACAH,yBAASI,YAAT,CAAsB,CAAtB;AACD;AACF,aAhBD,MAgBO;AACL,qBAAKvB,IAAL,CAAU,eAAV;AACA;AACAD;AACD;AACF,WAvBD;AAwBA;AACA,+CAAsBL,QAAtB,EAAgC,UAACQ,GAAD,EAAyBC,YAAzB,EAAkD;AAChF,mBAAKH,IAAL,CAAU,eAAV,EAA2BE,GAA3B,EAAgCC,YAAhC;AACA,gBAAID,GAAJ,EAAS;AACP;AACA;AACD;AACD1B,oBAAQ2B,YAAR;AACAQ;AACD,WARD;;AAUMa,uBAAN,GAAqC,mCAAoB9B,QAApB,EAA+BF,MAAD,CAAciC,YAA5C,CAArC;AACA;AACAD,wBAAcE,KAAd;;AAEA;AACMD,sBAAN,GAAqBD,cAAcG,eAAd,EAArB;AACMC,yBAAN,GAAwB,OAAOH,aAAaI,IAApB,KAA6B,QAA7B,GAAwCJ,aAAaI,IAArD,GAA4D3D,SAApF;;AAEM4D,iBAAN,GAAgBC,mBAASL,KAAT,CAAe,KAAKtD,OAApB,EAA6B;AAC3C4D,iBAAK,KAAK1D,OAAL,CAAa0D,GADyB;AAE3C;AACAC,2BAAe,IAH4B;AAI3CC,wBAAY,IAJ+B;AAK3CC,4BAAgB,KAL2B;AAM3CC,oCAAwB,IANmB;AAO3CC,qBAASZ,aAAaY,OAPqB;AAQ3CC,wBAAYb,aAAaI,IAAb,GAAoB,IAApB,GAA2B3D,SARI;AAS3CqE,sBAAUX,eATiC;AAU3CY,4BAAgBZ;AAV2B,WAA7B,CAAhB;;AAaMa,6BAAN,GAA4B,wBAAW;AAAA,mBAAMjB,cAAcE,KAAd,EAAN;AAAA,WAAX,EAAwCD,aAAaiB,gBAArD,CAA5B;AACMC,4BAAN,GAA2B,SAArBA,kBAAqB,CAACC,IAAD,EAAOC,OAAP,EAAmB;AAC5C,gBAAMC,cAAc,OAAK1E,OAAL,CAAa2E,IAAb,CAAkB,UAACC,OAAD;AAAA,qBAAa,yBAAUJ,IAAV,EAAgBI,OAAhB,CAAb;AAAA,aAAlB,CAApB;AACA;AACA,gBAAIF,WAAJ,EAAiB;AACf,kBAAM5D,WAAWtB,eAAKqF,IAAL,CAAU,OAAK3E,OAAL,CAAa0D,GAAvB,EAA4BY,IAA5B,CAAjB;AACA,kBAAIC,OAAJ,EAAa;AACX,uBAAK7C,IAAL,CAAU,eAAV,EAA2B4C,IAA3B;AACArC,4BAAY2C,UAAZ,CAAuBhE,QAAvB;AACD,eAHD,MAGO;AACL,uBAAKc,IAAL,CAAU,aAAV,EAAyB4C,IAAzB;AACArC,4BAAY4C,OAAZ,CAAoBjE,QAApB;AACD;;AAED;AACAsC,4BAAc4B,KAAd;AACA;AACAX;AACD;AACF,WAlBD;;AAoBA;AACAX,kBAAQhB,EAAR,CAAW,KAAX,EAAkB,UAAC8B,IAAD;AAAA,mBAAUD,mBAAmBC,IAAnB,EAAyB,KAAzB,CAAV;AAAA,WAAlB;AACAd,kBAAQhB,EAAR,CAAW,QAAX,EAAqB,UAAC8B,IAAD;AAAA,mBAAUD,mBAAmBC,IAAnB,EAAyB,IAAzB,CAAV;AAAA,WAArB;;AAEA,yBAAO,sBAAY;AAAA,mBAAM1E,SAAN;AAAA,WAAZ,CAAP,EA9H+C,CA8HV;AA9HU;;;;;;;2BAoIzC,K,EAKA,W,EAGA,O,EACA,c,EACA,U,EACA,U,EAEA,O,EAMA,W,EAmBA,M;AAxCEK,qB,GAAkB,KAAKD,O,CAAvBC,a;AAEM,eAAM,gBAAK,KAAKH,OAAV,EAAmB;AACrC4D,eAAK,KAAK1D,OAAL,CAAa0D,GADmB;AAErCqB,oBAAU;AAF2B,SAAnB,CAAN;;AAARhE,eAAN,GAAc,QAAd;;AAKMkB,qBAAN,GAAoB,IAAI+C,wBAAJ,EAApB;AACAjE,gBAAMJ,OAAN,CAAc,UAACsE,CAAD;AAAA,mBAAOhD,YAAY4C,OAAZ,CAAoBI,CAApB,CAAP;AAAA,WAAd;;AAEMC,iBAAN,GAAgB5F,eAAKqF,IAAL,CAAU,KAAK3E,OAAL,CAAa0D,GAAvB,EAA4B,MAA5B,EAAoC,WAApC,EAAiDyB,KAAKC,GAAL,GAAWC,QAAX,EAAjD,CAAhB;AACMC,wBAAN,GAAuB,mBAAMrF,aAAN,EAAqB,aAArB,CAAvB;AACMG,oBAAN,GAAmBd,eAAKiG,SAAL,CAAe,mBAAMtF,aAAN,EAAqB,aAArB,EAAoCiF,OAApC,CAAf,CAAnB;AACMM,oBAAN,GAAmBF,iBAAiB,mBAAMrF,aAAN,EAAqB,mBAArB,EAA0CL,SAA1C,CAAjB,GAAwEQ,aAAad,eAAKmG,GAA7G;;AAEMC,iBAAN,GAAgB,EAAhB;;AAEA,cAAI,KAAK1F,OAAL,CAAa2F,WAAjB,EAA8B;AAC5BD,oBAAQE,IAAR,CAAa,oCAAb;AACD;;AAEKC,qBAAN,GAAoB,mBAAM5F,aAAN,EAAqB,cAArB,EAAqC,EAArC,CAApB;AACA4F,sBAAYC,OAAZ,CAAoB;AAClBC,kBAAM1G,SADY;AAElB2G,iBAAK,CACH;AACEC,sBAAQvG,iBADV;AAEEM,uBAAS;AACPkG,yBAAS,KAAKnG;AADP;AAFX,aADG,EAOH;AACEkG,sBAAQxG,eADV;AAEEO,uBAAS;AACPiC;AADO;AAFX,aAPG;AAFa,WAApB;;AAkBMf,gBAAN,8BACKjB,aADL;AAEEkG,mBAAO9G,SAFT;AAGE+G,+CACMnG,aAAD,CAAqBmG,MAD1B;AAEEC,qBAAOR;AAFT,cAHF;AAOExF,+CACMJ,aAAD,CAAqBI,MAD1B;AAEEf,oBAAMc,UAFR;AAGEoF;AAHF,cAPF;AAYEE,gEACOzF,aAAD,CAAqByF,OAArB,IAAgC,EADtC,GAEKA,OAFL;AAZF;AAiBA,yBAAO;AACLzF,2BAAeiB,MADV;AAELe;AAFK,WAAP;AAvDc;;;;;EA/MsBqE,gB;;kBAAnBzG,U","file":"TestRunner.js","sourcesContent":["// @flow\nimport path from 'path';\nimport EventEmitter from 'events';\nimport _ from 'lodash';\nimport chokidar from 'chokidar';\nimport minimatch from 'minimatch';\n\nimport { glob } from '../util/glob';\nimport createCompiler from '../webpack/compiler/createCompiler';\nimport createWatchCompiler from '../webpack/compiler/createWatchCompiler';\nimport registerInMemoryCompiler from '../webpack/compiler/registerInMemoryCompiler';\nimport registerReadyCallback from '../webpack/compiler/registerReadyCallback';\n// $FlowFixMe\nimport { EntryConfig } from '../webpack/loader/entryLoader';\nimport configureMocha from './configureMocha';\nimport getBuildStats from '../webpack/util/getBuildStats';\nimport buildProgressPlugin from '../webpack/plugin/buildProgressPlugin';\n\nimport type { MochaWebpackOptions } from '../MochaWebpack';\nimport type { BuildStats } from '../webpack/util/getBuildStats';\nimport type { WatchCompiler } from '../webpack/compiler/createWatchCompiler';\nimport type { Compiler, Stats } from '../webpack/types';\n\nconst entryPath = path.resolve(__dirname, '../entry.js');\nconst entryLoaderPath = path.resolve(__dirname, '../webpack/loader/entryLoader.js');\nconst includeLoaderPath = path.resolve(__dirname, '../webpack/loader/includeFilesLoader.js');\nconst noop = () => undefined;\n\n\ntype MochaRunner = {\n  abort: () => void,\n  currentRunnable?: {\n    retries: (count: number) => void,\n    enableTimeouts: (enabled: boolean) => void,\n    timeout: (ms: number) => void,\n    resetTimeout: (ms: number) => void,\n  }\n};\ntype Mocha = {\n  run: (cb: (failures: number) => void) => MochaRunner,\n};\n\nexport default class TestRunner extends EventEmitter {\n  entries: Array<string>;\n  includes: Array<string>;\n  options: MochaWebpackOptions;\n\n  constructor(entries: Array<string>, includes: Array<string>, options: MochaWebpackOptions) {\n    super();\n    this.entries = entries;\n    this.includes = includes;\n\n    this.options = options;\n  }\n\n  prepareMocha(webpackConfig: Object, stats: Stats): Mocha {\n    const mocha: Mocha = configureMocha(this.options);\n    const outputPath = webpackConfig.output.path;\n    const buildStats: BuildStats = getBuildStats(stats, outputPath);\n\n    global.__webpackManifest__ = buildStats.affectedModules; // eslint-disable-line\n\n    // clear up require cache for changed files to make sure that we get the latest changes\n    buildStats.affectedFiles.forEach((filePath) => {\n      delete require.cache[filePath];\n    });\n    // pass webpack's entry files to mocha\n    (mocha: any).files = buildStats.entries;\n    return mocha;\n  }\n\n  async run(): Promise<number> {\n    const { webpackConfig: config } = await this.createWebpackConfig();\n    let failures = 0;\n    const compiler: Compiler = createCompiler(config);\n\n    compiler.hooks.run.tapAsync('mochapack', (c, cb) => {\n      this.emit('webpack:start');\n      // $FlowFixMe\n      cb();\n    });\n\n    const dispose = registerInMemoryCompiler(compiler);\n    try {\n      failures = await new Promise((resolve, reject) => {\n        registerReadyCallback(compiler, (err: ?(Error | string), webpackStats: ?Stats) => {\n          this.emit('webpack:ready', err, webpackStats);\n          if (err || !webpackStats) {\n            reject();\n            return;\n          }\n          try {\n            const mocha = this.prepareMocha(config, webpackStats);\n            this.emit('mocha:begin');\n            try {\n              mocha.run((fails) => {\n                this.emit('mocha:finished', fails);\n                resolve(fails);\n              });\n            } catch (e) {\n              this.emit('exception', e);\n              resolve(1);\n            }\n          } catch (e) {\n            reject(e);\n          }\n        });\n        compiler.run(noop);\n      });\n    } finally {\n      // clean up single run\n      dispose();\n    }\n    return failures;\n  }\n\n  async watch(): Promise<void> {\n    const { webpackConfig: config, entryConfig } = await this.createWebpackConfig();\n\n    let mochaRunner: ?MochaRunner = null;\n    let stats: ?Stats = null;\n    let compilationScheduler: ?() => void = null;\n\n    const uncaughtExceptionListener = (err) => {\n      // mocha catches uncaughtException only while tests are running,\n      // that's why we register a custom error handler to keep this process alive\n      this.emit('uncaughtException', err);\n    };\n\n    const runMocha = () => {\n      try {\n        // $FlowFixMe\n        const mocha = this.prepareMocha(config, stats);\n        // unregister our custom exception handler (see declaration)\n        process.removeListener('uncaughtException', uncaughtExceptionListener);\n\n        // run tests\n        this.emit('mocha:begin');\n        mochaRunner = mocha.run(_.once((failures) => {\n          // register custom exception handler to catch all errors that may happen after mocha think tests are done\n          process.on('uncaughtException', uncaughtExceptionListener);\n\n          // need to wait until next tick, otherwise mochaRunner = null doesn't work..\n          process.nextTick(() => {\n            mochaRunner = null;\n            if (compilationScheduler != null) {\n              this.emit('mocha:aborted');\n              compilationScheduler();\n              compilationScheduler = null;\n            } else {\n              this.emit('mocha:finished', failures);\n            }\n          });\n        }));\n      } catch (err) {\n        this.emit('exception', err);\n      }\n    };\n\n    const compiler = createCompiler(config);\n    registerInMemoryCompiler(compiler);\n    // register webpack start callback\n    compiler.hooks.watchRun.tapAsync('mochapack', (c, cb) => {\n      // check if mocha tests are still running, abort them and start compiling\n      if (mochaRunner) {\n        compilationScheduler = () => {\n          this.emit('webpack:start');\n          // $FlowFixMe\n          cb();\n        };\n\n        mochaRunner.abort();\n        // make sure that the current running test will be aborted when timeouts are disabled for async tests\n        if (mochaRunner.currentRunnable) {\n          const runnable = mochaRunner.currentRunnable;\n          runnable.retries(0);\n          runnable.enableTimeouts(true);\n          runnable.timeout(1);\n          runnable.resetTimeout(1);\n        }\n      } else {\n        this.emit('webpack:start');\n        // $FlowFixMe\n        cb();\n      }\n    });\n    // register webpack ready callback\n    registerReadyCallback(compiler, (err: ?(Error | string), webpackStats: ?Stats) => {\n      this.emit('webpack:ready', err, webpackStats);\n      if (err) {\n        // wait for fixed tests\n        return;\n      }\n      stats = webpackStats;\n      runMocha();\n    });\n\n    const watchCompiler: WatchCompiler = createWatchCompiler(compiler, (config: any).watchOptions);\n    // start webpack build immediately\n    watchCompiler.watch();\n\n    // webpack enhances watch options, that's why we use them instead\n    const watchOptions = watchCompiler.getWatchOptions();\n    const pollingInterval = typeof watchOptions.poll === 'number' ? watchOptions.poll : undefined;\n    // create own file watcher for entry files to detect created or deleted files\n    const watcher = chokidar.watch(this.entries, {\n      cwd: this.options.cwd,\n      // see https://github.com/webpack/watchpack/blob/e5305b53ac3cf2a70d49a772912b115fa77665c2/lib/DirectoryWatcher.js\n      ignoreInitial: true,\n      persistent: true,\n      followSymlinks: false,\n      ignorePermissionErrors: true,\n      ignored: watchOptions.ignored,\n      usePolling: watchOptions.poll ? true : undefined,\n      interval: pollingInterval,\n      binaryInterval: pollingInterval,\n    });\n\n    const restartWebpackBuild = _.debounce(() => watchCompiler.watch(), watchOptions.aggregateTimeout);\n    const fileDeletedOrAdded = (file, deleted) => {\n      const matchesGlob = this.entries.some((pattern) => minimatch(file, pattern));\n      // Chokidar gives files not matching pattern sometimes, prevent this\n      if (matchesGlob) {\n        const filePath = path.join(this.options.cwd, file);\n        if (deleted) {\n          this.emit('entry:removed', file);\n          entryConfig.removeFile(filePath);\n        } else {\n          this.emit('entry:added', file);\n          entryConfig.addFile(filePath);\n        }\n\n        // pause webpack watch immediately before webpack will be notified\n        watchCompiler.pause();\n        // call debounced webpack runner to rebuild files\n        restartWebpackBuild();\n      }\n    };\n\n    // add listener for entry creation & deletion events\n    watcher.on('add', (file) => fileDeletedOrAdded(file, false));\n    watcher.on('unlink', (file) => fileDeletedOrAdded(file, true));\n\n    return new Promise(() => undefined); // never ending story\n  }\n\n  async createWebpackConfig() {\n    const { webpackConfig } = this.options;\n\n    const files = await glob(this.entries, {\n      cwd: this.options.cwd,\n      absolute: true,\n    });\n\n    const entryConfig = new EntryConfig();\n    files.forEach((f) => entryConfig.addFile(f));\n\n    const tmpPath = path.join(this.options.cwd, '.tmp', 'mochapack', Date.now().toString());\n    const withCustomPath = _.has(webpackConfig, 'output.path');\n    const outputPath = path.normalize(_.get(webpackConfig, 'output.path', tmpPath));\n    const publicPath = withCustomPath ? _.get(webpackConfig, 'output.publicPath', undefined) : outputPath + path.sep;\n\n    const plugins = [];\n\n    if (this.options.interactive) {\n      plugins.push(buildProgressPlugin());\n    }\n\n    const userLoaders = _.get(webpackConfig, 'module.rules', []);\n    userLoaders.unshift({\n      test: entryPath,\n      use: [\n        {\n          loader: includeLoaderPath,\n          options: {\n            include: this.includes,\n          },\n        },\n        {\n          loader: entryLoaderPath,\n          options: {\n            entryConfig,\n          },\n        },\n      ],\n    });\n\n    const config = {\n      ...webpackConfig,\n      entry: entryPath,\n      module: {\n        ...(webpackConfig: any).module,\n        rules: userLoaders,\n      },\n      output: {\n        ...(webpackConfig: any).output,\n        path: outputPath,\n        publicPath,\n      },\n      plugins: [\n        ...((webpackConfig: any).plugins || []),\n        ...plugins,\n      ],\n    };\n    return {\n      webpackConfig: config,\n      entryConfig,\n    };\n  }\n}\n"]}