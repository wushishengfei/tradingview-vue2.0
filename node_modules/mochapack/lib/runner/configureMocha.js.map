{"version":3,"sources":["../../src/runner/configureMocha.js"],"names":["configureMocha","options","Error","stackTraceLimit","Infinity","mocha","Mocha","reporter","cwd","reporterOptions","useColors","colors","useInlineDiffs","suite","slow","timeout","enableTimeouts","bail","grep","RegExp","fgrep","invert","ignoreLeaks","checkLeaks","fullStackTrace","fullTrace","growl","asyncOnly","delay","retries","forbidOnly","ui"],"mappings":";;;;;kBAOwBA,c;;AANxB;;;;AACA;;;;AACA;;;;;;AAIe,SAASA,cAAT,CAAwBC,OAAxB,EAAsD;AACnE;AACAC,QAAMC,eAAN,GAAwBC,QAAxB;;AAEA;AACA,MAAMC,QAAQ,IAAIC,eAAJ,EAAd;;AAEA;AACA,MAAMC,WAAW,4BAAaN,QAAQM,QAArB,EAA+BN,QAAQO,GAAvC,CAAjB;AACAH,QAAME,QAAN,CAAeA,QAAf,EAAyBN,QAAQQ,eAAjC;;AAEA;AACAJ,QAAMK,SAAN,CAAgBT,QAAQU,MAAxB;;AAEA;AACAN,QAAMO,cAAN,CAAqBX,QAAQW,cAA7B;;AAGA;AACAP,QAAMQ,KAAN,CAAYC,IAAZ,CAAiBb,QAAQa,IAAzB;;AAEA;AACA,MAAIb,QAAQc,OAAR,KAAoB,CAAxB,EAA2B;AACzBV,UAAMW,cAAN,CAAqB,KAArB;AACD,GAFD,MAEO;AACLX,UAAMQ,KAAN,CAAYE,OAAZ,CAAoBd,QAAQc,OAA5B;AACD;;AAED;AACAV,QAAMQ,KAAN,CAAYI,IAAZ,CAAiBhB,QAAQgB,IAAzB;;AAEA;AACA,MAAIhB,QAAQiB,IAAZ,EAAkB;AAChBb,UAAMa,IAAN,CAAW,IAAIC,MAAJ,CAAWlB,QAAQiB,IAAnB,CAAX;AACD;;AAED;AACA,MAAIjB,QAAQmB,KAAZ,EAAmB;AACjBf,UAAMa,IAAN,CAAWjB,QAAQmB,KAAnB;AACD;;AAED;AACA,MAAInB,QAAQoB,MAAZ,EAAoB;AAClBhB,UAAMgB,MAAN;AACD;;AAED;AACA,MAAIpB,QAAQqB,WAAR,KAAwB,KAA5B,EAAmC;AACjCjB,UAAMkB,UAAN;AACD;;AAED;AACA,MAAItB,QAAQuB,cAAZ,EAA4B;AAC1BnB,UAAMoB,SAAN;AACD;;AAED;AACA,MAAIxB,QAAQyB,KAAZ,EAAmB;AACjBrB,UAAMqB,KAAN;AACD;;AAED;AACA,MAAIzB,QAAQ0B,SAAZ,EAAuB;AACrBtB,UAAMsB,SAAN;AACD;;AAED;AACA,MAAI1B,QAAQ2B,KAAZ,EAAmB;AACjBvB,UAAMuB,KAAN;AACD;;AAED;AACA,MAAI3B,QAAQ4B,OAAZ,EAAqB;AACnBxB,UAAMQ,KAAN,CAAYgB,OAAZ,CAAoB5B,QAAQ4B,OAA5B;AACD;;AAED;AACA,MAAI5B,QAAQ6B,UAAZ,EAAwB;AACtBzB,UAAMyB,UAAN;AACD;;AAED;AACA,MAAMC,KAAK,sBAAO9B,QAAQ8B,EAAf,EAAmB9B,QAAQO,GAA3B,CAAX;AACAH,QAAM0B,EAAN,CAASA,EAAT;;AAEA,SAAO1B,KAAP;AACD","file":"configureMocha.js","sourcesContent":["// @flow\nimport Mocha from 'mocha';\nimport loadReporter from './loadReporter';\nimport loadUI from './loadUI';\nimport type { MochaWebpackOptions } from '../MochaWebpack';\n\n\nexport default function configureMocha(options: MochaWebpackOptions) {\n  // infinite stack traces\n  Error.stackTraceLimit = Infinity;\n\n  // init mocha\n  const mocha = new Mocha();\n\n  // reporter\n  const reporter = loadReporter(options.reporter, options.cwd);\n  mocha.reporter(reporter, options.reporterOptions);\n\n  // colors\n  mocha.useColors(options.colors);\n\n  // inline-diffs\n  mocha.useInlineDiffs(options.useInlineDiffs);\n\n\n  // slow <ms>\n  mocha.suite.slow(options.slow);\n\n  // timeout <ms>\n  if (options.timeout === 0) {\n    mocha.enableTimeouts(false);\n  } else {\n    mocha.suite.timeout(options.timeout);\n  }\n\n  // bail\n  mocha.suite.bail(options.bail);\n\n  // grep\n  if (options.grep) {\n    mocha.grep(new RegExp(options.grep));\n  }\n\n  // fgrep\n  if (options.fgrep) {\n    mocha.grep(options.fgrep);\n  }\n\n  // invert\n  if (options.invert) {\n    mocha.invert();\n  }\n\n  // check-leaks\n  if (options.ignoreLeaks === false) {\n    mocha.checkLeaks();\n  }\n\n  // full-trace\n  if (options.fullStackTrace) {\n    mocha.fullTrace();\n  }\n\n  // growl\n  if (options.growl) {\n    mocha.growl();\n  }\n\n  // async-only\n  if (options.asyncOnly) {\n    mocha.asyncOnly();\n  }\n\n  // delay\n  if (options.delay) {\n    mocha.delay();\n  }\n\n  // retries\n  if (options.retries) {\n    mocha.suite.retries(options.retries);\n  }\n\n  // forbid-only\n  if (options.forbidOnly) {\n    mocha.forbidOnly();\n  }\n\n  // interface\n  const ui = loadUI(options.ui, options.cwd);\n  mocha.ui(ui);\n\n  return mocha;\n}\n"]}