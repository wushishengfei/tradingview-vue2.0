{"version":3,"sources":["../src/MochaWebpack.js"],"names":["MochaWebpack","entries","includes","options","cwd","process","webpackConfig","bail","reporter","reporterOptions","ui","invert","ignoreLeaks","fullStackTrace","useInlineDiffs","timeout","slow","asyncOnly","delay","interactive","stdout","isTTY","clearTerminal","quiet","forbidOnly","file","config","str","fgrep","pattern","grep","ignore","colors","inlineDiffs","count","retries","threshold","growl","runner","TestRunner","eventEmitter","run","watch"],"mappings":"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","file":"MochaWebpack.js","sourcesContent":["// @flow\nimport TestRunner from './runner/TestRunner';\nimport testRunnerReporter from './runner/testRunnerReporter';\n\nexport type MochaWebpackOptions = {\n  cwd: string,\n  webpackConfig: {},\n  bail: boolean,\n  reporter: string | () => void,\n  reporterOptions: {},\n  ui: string,\n  fgrep?: string,\n  grep?: string | RegExp,\n  invert: boolean,\n  ignoreLeaks: boolean,\n  fullStackTrace: boolean,\n  colors?: boolean,\n  useInlineDiffs: boolean,\n  timeout: number,\n  retries?: number,\n  slow: number,\n  asyncOnly: boolean,\n  delay: boolean,\n  interactive: boolean,\n  clearTerminal: boolean,\n  quiet: boolean,\n  growl?: boolean,\n  forbidOnly: boolean,\n};\n\nexport default class MochaWebpack {\n  /**\n   * Files to run test against\n   *\n   * @private\n   */\n  entries: Array<string> = [];\n  /**\n   * Files to include into the bundle\n   *\n   * @private\n   */\n  includes: Array<string> = [];\n  /**\n   * Options\n   *\n   * @private\n   */\n  options: MochaWebpackOptions = {\n    cwd: process.cwd(),\n    webpackConfig: {},\n    bail: false,\n    reporter: 'spec',\n    reporterOptions: {},\n    ui: 'bdd',\n    invert: false,\n    ignoreLeaks: true,\n    fullStackTrace: false,\n    useInlineDiffs: false,\n    timeout: 2000,\n    slow: 75,\n    asyncOnly: false,\n    delay: false,\n    interactive: !!((process.stdout: any).isTTY),\n    clearTerminal: false,\n    quiet: false,\n    forbidOnly: false,\n  };\n\n  /**\n   * Add file run test against\n   *\n   * @public\n   * @param {string} file file or glob\n   * @return {MochaWebpack}\n   */\n  addEntry(file: string): MochaWebpack {\n    this.entries = [\n      ...this.entries,\n      file,\n    ];\n    return this;\n  }\n\n  /**\n   * Add file to include into the test bundle\n   *\n   * @public\n   * @param {string} file absolute path to module\n   * @return {MochaWebpack}\n   */\n  addInclude(file: string): MochaWebpack {\n    this.includes = [\n      ...this.includes,\n      file,\n    ];\n    return this;\n  }\n\n  /**\n   * Sets the current working directory\n   *\n   * @public\n   * @param {string} cwd absolute working directory path\n   * @return {MochaWebpack}\n   */\n  cwd(cwd: string): MochaWebpack {\n    this.options = {\n      ...this.options,\n      cwd,\n    };\n    return this;\n  }\n\n  /**\n   * Sets the webpack config\n   *\n   * @public\n   * @param {Object} config webpack config\n   * @return {MochaWebpack}\n   */\n  webpackConfig(config: {} = {}): MochaWebpack {\n    this.options = {\n      ...this.options,\n      webpackConfig: config,\n    };\n    return this;\n  }\n\n  /**\n   * Enable or disable bailing on the first failure.\n   *\n   * @public\n   * @param {boolean} [bail]\n   * @return {MochaWebpack}\n   */\n  bail(bail: boolean = false): MochaWebpack {\n    this.options = {\n      ...this.options,\n      bail,\n    };\n    return this;\n  }\n\n  /**\n   * Set reporter to `reporter`, defaults to \"spec\".\n   *\n   * @param {string|Function} reporter name or constructor\n   * @param {Object} reporterOptions optional options\n   * @return {MochaWebpack}\n   */\n  reporter(reporter: string | () => void, reporterOptions: {}): MochaWebpack {\n    this.options = {\n      ...this.options,\n      reporter,\n      reporterOptions,\n    };\n    return this;\n  }\n\n  /**\n   * Set test UI, defaults to \"bdd\".\n   *\n   * @public\n   * @param {string} ui bdd/tdd\n   * @return {MochaWebpack}\n   */\n  ui(ui: string): MochaWebpack {\n    this.options = {\n      ...this.options,\n      ui,\n    };\n    return this;\n  }\n\n  /**\n   * Only run tests containing <string>\n   *\n   * @public\n   * @param {string} str\n   * @return {MochaWebpack}\n   */\n  fgrep(str: string): MochaWebpack {\n    this.options = {\n      ...this.options,\n      fgrep: str,\n    };\n    return this;\n  }\n\n  /**\n   * Only run tests matching <pattern>\n   *\n   * @public\n   * @param {string|RegExp} pattern\n   * @return {MochaWebpack}\n   */\n  grep(pattern: string | RegExp): MochaWebpack {\n    this.options = {\n      ...this.options,\n      grep: pattern,\n    };\n    return this;\n  }\n\n  /**\n   * Invert `.grep()` matches.\n   *\n   * @public\n   * @return {MochaWebpack}\n   */\n  invert(): MochaWebpack {\n    this.options = {\n      ...this.options,\n      invert: true,\n    };\n    return this;\n  }\n\n  /**\n   * Ignore global leaks.\n   *\n   * @public\n   * @param {boolean} ignore\n   * @return {MochaWebpack}\n   */\n  ignoreLeaks(ignore: boolean): MochaWebpack {\n    this.options = {\n      ...this.options,\n      ignoreLeaks: ignore,\n    };\n    return this;\n  }\n\n  /**\n   * Display long stack-trace on failing\n   *\n   * @public\n   * @return {MochaWebpack}\n   */\n  fullStackTrace(): MochaWebpack {\n    this.options = {\n      ...this.options,\n      fullStackTrace: true,\n    };\n    return this;\n  }\n\n  /**\n   * Emit color output.\n   *\n   * @public\n   * @param {boolean} colors\n   * @return {MochaWebpack}\n   */\n  useColors(colors: boolean): MochaWebpack {\n    this.options = {\n      ...this.options,\n      colors,\n    };\n    return this;\n  }\n\n  /**\n   * Quiet informational messages.\n   *\n   * @public\n   * @return {MochaWebpack}\n   */\n  quiet(): MochaWebpack {\n    this.options = {\n      ...this.options,\n      quiet: true,\n    };\n    return this;\n  }\n\n  /**\n   * Use inline diffs rather than +/-.\n   *\n   * @public\n   * @param {boolean} inlineDiffs\n   * @return {MochaWebpack}\n   */\n  useInlineDiffs(inlineDiffs: boolean): MochaWebpack {\n    this.options = {\n      ...this.options,\n      useInlineDiffs: inlineDiffs,\n    };\n    return this;\n  }\n\n  /**\n   * Set the timeout in milliseconds. Value of 0 disables timeouts\n   *\n   * @public\n   * @param {number} timeout time in ms\n   * @return {MochaWebpack}\n   */\n  timeout(timeout: number): MochaWebpack {\n    this.options = {\n      ...this.options,\n      timeout,\n    };\n    return this;\n  }\n\n  /**\n   * Set the number of times to retry failed tests.\n   *\n   * @public\n   * @param {number} count retry times\n   * @return {MochaWebpack}\n   */\n  retries(count: number): MochaWebpack {\n    this.options = {\n      ...this.options,\n      retries: count,\n    };\n    return this;\n  }\n\n\n  /**\n   * Set slowness threshold in milliseconds.\n   *\n   * @public\n   * @param {number} threshold time in ms\n   * @return {MochaWebpack}\n   */\n  slow(threshold: number): MochaWebpack {\n    this.options = {\n      ...this.options,\n      slow: threshold,\n    };\n    return this;\n  }\n\n  /**\n   * Makes all tests async (accepting a callback)\n   *\n   * @public\n   * @return {MochaWebpack}\n   */\n  asyncOnly(): MochaWebpack {\n    this.options = {\n      ...this.options,\n      asyncOnly: true,\n    };\n    return this;\n  }\n\n  /**\n   * Delay root suite execution.\n   *\n   * @public\n   * @return {MochaWebpack}\n   */\n  delay(): MochaWebpack {\n    this.options = {\n      ...this.options,\n      delay: true,\n    };\n    return this;\n  }\n\n  /**\n   * Force interactive mode (default enabled in terminal)\n   *\n   * @public\n   * @param {boolean} interactive\n   * @return {MochaWebpack}\n   */\n  interactive(interactive: boolean): MochaWebpack {\n    this.options = {\n      ...this.options,\n      interactive,\n    };\n    return this;\n  }\n\n  /**\n   * Clear terminal on startup\n   *\n   * @public\n   * @param {boolean} clearTerminal\n   * @return {MochaWebpack}\n   */\n  clearTerminal(clearTerminal: boolean): MochaWebpack {\n    this.options = {\n      ...this.options,\n      clearTerminal,\n    };\n    return this;\n  }\n\n  /**\n   * Enable growl notification support\n   *\n   * @public\n   * @param {boolean} growl\n   * @return {MochaWebpack}\n   */\n  growl(): MochaWebpack {\n    this.options = {\n      ...this.options,\n      growl: true,\n    };\n    return this;\n  }\n\n  /**\n   * Disallow .only in tests\n   *\n   * @public\n   * @param {boolean} forbidOnly\n   * @return {MochaWebpack}\n   */\n  forbidOnly(): MochaWebpack {\n    this.options = {\n      ...this.options,\n      forbidOnly: true,\n    };\n    return this;\n  }\n\n  /**\n   * Run tests\n   *\n   * @public\n   * @return {Promise<number>} a Promise that gets resolved with the number of failed tests or rejected with build error\n   */\n  async run(): Promise<number> {\n    const runner = new TestRunner(this.entries, this.includes, this.options);\n    testRunnerReporter({\n      eventEmitter: runner,\n      interactive: this.options.interactive,\n      quiet: this.options.quiet,\n      cwd: this.options.cwd,\n      clearTerminal: this.options.clearTerminal,\n    });\n    return runner.run();\n  }\n\n  /**\n   * Run tests and rerun them on changes\n   * @public\n   */\n  async watch(): Promise<void> {\n    const runner = new TestRunner(this.entries, this.includes, this.options);\n    testRunnerReporter({\n      eventEmitter: runner,\n      interactive: this.options.interactive,\n      quiet: this.options.quiet,\n      cwd: this.options.cwd,\n      clearTerminal: this.options.clearTerminal,\n    });\n    await runner.watch();\n  }\n}\n"]}