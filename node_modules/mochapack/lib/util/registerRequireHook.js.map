{"version":3,"sources":["../../src/util/registerRequireHook.js"],"names":["registerRequireHook","requireCaller","pathResolvers","originalResolveFilename","Module","_resolveFilename","parameters","parent","apply","originalFindPath","_findPath","request","resolve","resolved","filename","dotExt","sourceCache","affectedFiles","resolvePath","path","resolvedPath","source","undefined","require","cache","resolveSource","push","originalLoader","_extensions","module","_compile","unmout","filter","r","forEach"],"mappings":"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","file":"registerRequireHook.js","sourcesContent":["// @flow\n/*  eslint-disable no-underscore-dangle */\n\n// see https://github.com/nodejs/node/blob/master/lib/module.js\n// $FlowFixMe\nimport Module from 'module';\n\n// the module in which the require() call originated\nlet requireCaller;\n// all custom registered resolvers\nlet pathResolvers = [];\n\n// keep original Module._resolveFilename\nconst originalResolveFilename = Module._resolveFilename;\n// override Module._resolveFilename\nModule._resolveFilename = function _resolveFilename(...parameters) {\n  const parent = parameters[1];\n  // store require() caller (the module in which this require() call originated)\n  requireCaller = parent;\n  return originalResolveFilename.apply(this, parameters);\n};\n\n// keep original Module._findPath\nconst originalFindPath = Module._findPath;\n// override Module._findPath\nModule._findPath = function _findPath(...parameters) {\n  const request = parameters[0];\n\n  // try to resolve the path with custom resolvers\n  for (const resolve of pathResolvers) {\n    const resolved = resolve(request, requireCaller);\n    if (typeof resolved !== 'undefined') {\n      return resolved;\n    }\n  }\n\n  // and when none found try to resolve path with original resolver\n  const filename = originalFindPath.apply(this, parameters);\n  if (filename !== false) {\n    return filename;\n  }\n\n  return false;\n};\n\n\nexport default function registerRequireHook(\n  dotExt: string,\n  resolve: (path: string, parent: Module) => { path: ?string, source: ?string },\n) {\n  // cache source code after resolving to avoid another access to the fs\n  const sourceCache = {};\n  // store all files that were affected by this hook\n  const affectedFiles = {};\n\n  const resolvePath = (path, parent) => {\n    // get CommonJS module source code for this require() call\n    const { path: resolvedPath, source } = resolve(path, parent);\n\n    // if no CommonJS module source code returned - skip this require() hook\n    if (resolvedPath == null) {\n      return undefined;\n    }\n\n    // flush require() cache\n    delete require.cache[resolvedPath];\n\n    // put the CommonJS module source code into the hash\n    sourceCache[resolvedPath] = source;\n\n    // return the path to be require()d in order to get the CommonJS module source code\n    return resolvedPath;\n  };\n\n  const resolveSource = (path) => {\n    const source = sourceCache[path];\n    delete sourceCache[path];\n    return source;\n  };\n\n  pathResolvers.push(resolvePath);\n\n\n  // keep original extension loader\n  const originalLoader = Module._extensions[dotExt];\n  // override extension loader\n  Module._extensions[dotExt] = (module, filename) => {\n    const source = resolveSource(filename);\n\n    if (typeof source === 'undefined') {\n      // load the file with the original loader\n      (originalLoader || Module._extensions['.js'])(module, filename);\n      return;\n    }\n\n    affectedFiles[filename] = true;\n\n    // compile javascript module from its source\n    module._compile(source, filename);\n  };\n\n  return function unmout() {\n    pathResolvers = pathResolvers.filter((r) => r !== resolvePath);\n    Module._extensions[dotExt] = originalLoader;\n    Object.keys(affectedFiles).forEach((path) => {\n      delete require.cache[path];\n      delete sourceCache[path];\n      delete affectedFiles[path];\n    });\n  };\n}\n"]}