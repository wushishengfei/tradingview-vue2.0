{"version":3,"sources":["../../../src/webpack/compiler/registerReadyCallback.js"],"names":["registerReadyCallback","compiler","cb","hooks","failed","tap","done","stats","hasErrors","jsonStats","toJson","errors","err"],"mappings":";;;;;;;;;;kBAGwBA,qB;;;;AAAT,SAASA,qBAAT,CAA+BC,QAA/B,EAAmDC,EAAnD,EAAwG;AACrHD,WAASE,KAAT,CAAeC,MAAf,CAAsBC,GAAtB,CAA0B,WAA1B,EAAuCH,EAAvC;AACAD,WAASE,KAAT,CAAeG,IAAf,CAAoBD,GAApB,CAAwB,WAAxB,EAAqC,UAACE,KAAD,EAAkB;AACrD,QAAIA,MAAMC,SAAN,EAAJ,EAAuB;AACrB,UAAMC,YAAYF,MAAMG,MAAN,EAAlB;;AADqB,2DAEPD,UAAUE,MAFH;AAAA,UAEdC,IAFc;;AAGrBV,SAAGU,IAAH,EAAQL,KAAR;AACD,KAJD,MAIO;AACLL,SAAG,IAAH,EAASK,KAAT;AACD;AACF,GARD;AASD","file":"registerReadyCallback.js","sourcesContent":["// @flow\nimport type { Compiler, Stats } from '../types';\n\nexport default function registerReadyCallback(compiler: Compiler, cb: (err: ?(Error | string), stats: ?Stats) => void) {\n  compiler.hooks.failed.tap('mochapack', cb);\n  compiler.hooks.done.tap('mochapack', (stats: Stats) => {\n    if (stats.hasErrors()) {\n      const jsonStats = stats.toJson();\n      const [err] = jsonStats.errors;\n      cb(err, stats);\n    } else {\n      cb(null, stats);\n    }\n  });\n}\n"]}